{"ast":null,"code":"var _jsxFileName = \"/Users/gavinlau/Documents/MDSA/DATA604/NBA_app/client/src/pages/LoginScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Input, Button, useToast, Text, Center, ButtonGroup } from \"@chakra-ui/react\";\nimport { useUserContext } from \"../contexts/UserContext\";\nimport { Link, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  email: '',\n  password: ''\n};\nconst LoginScreen = () => {\n  _s();\n  const {\n    login,\n    user\n  } = useUserContext();\n  // react hooks\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    email,\n    password\n  } = formFields;\n  const toast = useToast();\n  const resetFormFields = () => {\n    return setFormFields(defaultFormFields);\n  };\n  // handle input changes\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({\n      ...formFields,\n      [name]: value\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await login(email, password);\n  };\n  const renderRedirect = () => {\n    if (user) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Center, {\n    height: \"80vh\",\n    alignContent: \"center\",\n    children: [renderRedirect(), /*#__PURE__*/_jsxDEV(Text, {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Email\",\n        type: \"email\",\n        required: true,\n        name: \"email\",\n        value: email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Password\",\n        type: \"password\",\n        required: true,\n        name: \"password\",\n        value: password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: resetFormFields,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signupPage\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginScreen, \"GswvVMULZGpiMtGlKCWrHkWPN8U=\", false, function () {\n  return [useUserContext, useToast];\n});\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","useState","Input","Button","useToast","Text","Center","ButtonGroup","useUserContext","Link","Navigate","defaultFormFields","email","password","LoginScreen","login","user","formFields","setFormFields","toast","resetFormFields","handleChange","event","name","value","target","handleSubmit","preventDefault","renderRedirect"],"sources":["/Users/gavinlau/Documents/MDSA/DATA604/NBA_app/client/src/pages/LoginScreen.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent, useEffect } from \"react\"\nimport { User } from \"../../../server/types/User\"\nimport { Input, Box, Button, useToast, Text, Center, ButtonGroup } from \"@chakra-ui/react\";\nimport { useUserContext } from \"../contexts/UserContext\";\nimport { Link, Navigate } from \"react-router-dom\";\nconst defaultFormFields = {\n  email: '',\n  password: '',\n}\n\nconst LoginScreen: React.FC = () => {\n  const { login, user } = useUserContext();\n  // react hooks\n  const [formFields, setFormFields] = useState(defaultFormFields)\n  const { email, password } = formFields\n\n  const toast = useToast();\n  const resetFormFields = () => {\n    return (\n      setFormFields(defaultFormFields)\n    );\n  }\n  // handle input changes\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setFormFields({ ...formFields, [name]: value })\n  }\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    await login(email, password)\n  }\n\n  const renderRedirect = () => {\n    if (user) {\n      return <Navigate to=\"/\" />\n    }\n  }\n  return (\n\n    <Center\n      height={\"80vh\"}\n      alignContent={\"center\"}>\n      {renderRedirect()}\n      <Text>\n        Sign In\n      </Text>\n      <form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Email\"\n          type=\"email\"\n          required\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n        />\n        <Input\n          placeholder=\"Password\"\n          type='password'\n          required\n          name='password'\n          value={password}\n          onChange={handleChange}\n        />\n        <ButtonGroup>\n          <Button type=\"submit\">Sign In</Button>\n          <Button type=\"button\" onClick={resetFormFields}>Clear</Button>\n          <Link to=\"/signupPage\">\n            <Button>\n              Sign up\n            </Button>\n          </Link>\n        </ButtonGroup>\n      </form>\n    </Center>);\n}\n\nexport default LoginScreen"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAA2C,OAAO;AAE1E,SAASC,KAAK,EAAOC,MAAM,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAC1F,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC;AAClD,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,WAAqB,GAAG,MAAM;EAAA;EAClC,MAAM;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGR,cAAc,EAAE;EACxC;EACA,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAACU,iBAAiB,CAAC;EAC/D,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGI,UAAU;EAEtC,MAAME,KAAK,GAAGf,QAAQ,EAAE;EACxB,MAAMgB,eAAe,GAAG,MAAM;IAC5B,OACEF,aAAa,CAACP,iBAAiB,CAAC;EAEpC,CAAC;EACD;EACA,MAAMU,YAAY,GAAIC,KAAoC,IAAK;IAC7D,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCP,aAAa,CAAC;MAAE,GAAGD,UAAU;MAAE,CAACM,IAAI,GAAGC;IAAM,CAAC,CAAC;EACjD,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,KAAiC,IAAK;IAChEA,KAAK,CAACK,cAAc,EAAE;IACtB,MAAMZ,KAAK,CAACH,KAAK,EAAEC,QAAQ,CAAC;EAC9B,CAAC;EAED,MAAMe,cAAc,GAAG,MAAM;IAC3B,IAAIZ,IAAI,EAAE;MACR,oBAAO,QAAC,QAAQ;QAAC,EAAE,EAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAG;IAC5B;EACF,CAAC;EACD,oBAEE,QAAC,MAAM;IACL,MAAM,EAAE,MAAO;IACf,YAAY,EAAE,QAAS;IAAA,WACtBY,cAAc,EAAE,eACjB,QAAC,IAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEE,eACP;MAAM,QAAQ,EAAEF,YAAa;MAAA,wBAC3B,QAAC,KAAK;QACJ,WAAW,EAAC,OAAO;QACnB,IAAI,EAAC,OAAO;QACZ,QAAQ;QACR,IAAI,EAAC,OAAO;QACZ,KAAK,EAAEd,KAAM;QACb,QAAQ,EAAES;MAAa;QAAA;QAAA;QAAA;MAAA,QACvB,eACF,QAAC,KAAK;QACJ,WAAW,EAAC,UAAU;QACtB,IAAI,EAAC,UAAU;QACf,QAAQ;QACR,IAAI,EAAC,UAAU;QACf,KAAK,EAAER,QAAS;QAChB,QAAQ,EAAEQ;MAAa;QAAA;QAAA;QAAA;MAAA,QACvB,eACF,QAAC,WAAW;QAAA,wBACV,QAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,eACtC,QAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAC,OAAO,EAAED,eAAgB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe,eAC9D,QAAC,IAAI;UAAC,EAAE,EAAC,aAAa;UAAA,uBACpB,QAAC,MAAM;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAEE;UAAA;UAAA;UAAA;QAAA,QACJ;MAAA;QAAA;QAAA;QAAA;MAAA,QACK;IAAA;MAAA;MAAA;MAAA;IAAA,QACT;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AACb,CAAC;AAAA,GAjEKN,WAAqB;EAAA,QACDN,cAAc,EAKxBJ,QAAQ;AAAA;AAAA,KANlBU,WAAqB;AAmE3B,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}