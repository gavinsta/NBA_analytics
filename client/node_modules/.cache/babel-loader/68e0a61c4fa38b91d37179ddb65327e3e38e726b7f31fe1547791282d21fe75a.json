{"ast":null,"code":"var _jsxFileName = \"/Users/gavinlau/Documents/MDSA/DATA604/NBA_app/client/src/contexts/UserContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from \"react\";\nimport { getUser, tryCreateNewUser } from \"../utils/DataUtils\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"http://localhost:8080\";\nexport const UserContext = /*#__PURE__*/createContext({\n  user: null,\n  login: () => {},\n  logout: () => {},\n  createNewUser: () => {}\n});\nexport const UserContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const toast = useToast();\n  const createNewUser = async user => {\n    const res = await tryCreateNewUser(URL + \"/signup\", user);\n    if (res.status === \"error\") {\n      toast({\n        status: \"error\",\n        title: \"Failed to create new user\",\n        description: res.title\n      });\n    } else {\n      toast({\n        status: \"success\",\n        title: \"New User Created!\",\n        description: res.title\n      });\n      setUser(res.user);\n    }\n  };\n  const login = async (email, password) => {\n    const res = await getUser(URL + \"/login\", email, password);\n    if (res.status === \"error\") {\n      toast({\n        status: \"error\",\n        title: \"Invalid Email or Password\",\n        description: res.title\n      });\n    } else {\n      toast({\n        status: \"success\",\n        title: \"Logged in\",\n        description: res.title\n      });\n      setUser(res.user);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    toast({\n      status: \"info\",\n      title: \"Logged out\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      createNewUser,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(UserContextProvider, \"JB4hIkj4/LgmiMoVRMmPS6QBWhk=\", false, function () {\n  return [useToast];\n});\n_c = UserContextProvider;\nexport const useUserContext = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error(\"useFantasyTeam must be used within a UserContextProvider\");\n  }\n  return context;\n};\n_s2(useUserContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","getUser","tryCreateNewUser","useToast","URL","UserContext","user","login","logout","createNewUser","UserContextProvider","children","setUser","toast","res","status","title","description","email","password","useUserContext","context","undefined","Error"],"sources":["/Users/gavinlau/Documents/MDSA/DATA604/NBA_app/client/src/contexts/UserContext.tsx"],"sourcesContent":["import { User } from \"../../../server/types/User\"\nimport React, { createContext, useState, useContext } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { getUser, tryCreateNewUser } from \"../utils/DataUtils\"\nimport { useToast } from \"@chakra-ui/react\"\ninterface ContextType {\n  user: User | null;\n  createNewUser: (user: User) => void;\n  login: (email: string, password: string) => void;\n  logout: () => void;\n}\n\nconst URL = \"http://localhost:8080\"\nexport const UserContext = createContext<ContextType>({\n  user: null,\n  login: () => { },\n  logout: () => { },\n  createNewUser: () => { }\n});\n\nexport const UserContextProvider: React.FC<{\n  children: React.ReactNode;\n}> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const toast = useToast();\n  const createNewUser = async (user: User) => {\n    const res: ({ status: string, title: string, user: User | null }) = await tryCreateNewUser(\n      URL + \"/signup\", user\n    )\n\n    if (res.status === \"error\") {\n      toast({\n        status: \"error\",\n        title: \"Failed to create new user\",\n        description: res.title\n      })\n    }\n    else {\n      toast({\n        status: \"success\",\n        title: \"New User Created!\",\n        description: res.title\n      })\n\n      setUser(res.user)\n    }\n  }\n\n  const login = async (email: string, password: string) => {\n    const res: ({ status: string, title: string, user: User | null }) = await getUser(\n      URL + \"/login\", email, password\n    )\n    if (res.status === \"error\") {\n      toast({\n        status: \"error\",\n        title: \"Invalid Email or Password\",\n        description: res.title,\n      })\n    }\n    else {\n      toast({\n        status: \"success\",\n        title: \"Logged in\",\n        description: res.title,\n      })\n\n      setUser(res.user)\n    }\n  }\n\n  const logout = () => {\n    setUser(null)\n    toast({\n      status: \"info\",\n      title: \"Logged out\"\n    })\n  }\n  return (\n    <UserContext.Provider\n      value={{\n        user,\n        createNewUser,\n        login,\n        logout,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUserContext = () => {\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useFantasyTeam must be used within a UserContextProvider\"\n    );\n  }\n  return context;\n};"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAElE,SAASC,OAAO,EAAEC,gBAAgB,QAAQ,oBAAoB;AAC9D,SAASC,QAAQ,QAAQ,kBAAkB;AAAA;AAQ3C,MAAMC,GAAG,GAAG,uBAAuB;AACnC,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAc;EACpDQ,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,MAAM,CAAE,CAAC;EAChBC,MAAM,EAAE,MAAM,CAAE,CAAC;EACjBC,aAAa,EAAE,MAAM,CAAE;AACzB,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAEX,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAChB,MAAM,CAACL,IAAI,EAAEM,OAAO,CAAC,GAAGb,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAMc,KAAK,GAAGV,QAAQ,EAAE;EACxB,MAAMM,aAAa,GAAG,MAAOH,IAAU,IAAK;IAC1C,MAAMQ,GAA2D,GAAG,MAAMZ,gBAAgB,CACxFE,GAAG,GAAG,SAAS,EAAEE,IAAI,CACtB;IAED,IAAIQ,GAAG,CAACC,MAAM,KAAK,OAAO,EAAE;MAC1BF,KAAK,CAAC;QACJE,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,2BAA2B;QAClCC,WAAW,EAAEH,GAAG,CAACE;MACnB,CAAC,CAAC;IACJ,CAAC,MACI;MACHH,KAAK,CAAC;QACJE,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,mBAAmB;QAC1BC,WAAW,EAAEH,GAAG,CAACE;MACnB,CAAC,CAAC;MAEFJ,OAAO,CAACE,GAAG,CAACR,IAAI,CAAC;IACnB;EACF,CAAC;EAED,MAAMC,KAAK,GAAG,OAAOW,KAAa,EAAEC,QAAgB,KAAK;IACvD,MAAML,GAA2D,GAAG,MAAMb,OAAO,CAC/EG,GAAG,GAAG,QAAQ,EAAEc,KAAK,EAAEC,QAAQ,CAChC;IACD,IAAIL,GAAG,CAACC,MAAM,KAAK,OAAO,EAAE;MAC1BF,KAAK,CAAC;QACJE,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,2BAA2B;QAClCC,WAAW,EAAEH,GAAG,CAACE;MACnB,CAAC,CAAC;IACJ,CAAC,MACI;MACHH,KAAK,CAAC;QACJE,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,WAAW;QAClBC,WAAW,EAAEH,GAAG,CAACE;MACnB,CAAC,CAAC;MAEFJ,OAAO,CAACE,GAAG,CAACR,IAAI,CAAC;IACnB;EACF,CAAC;EAED,MAAME,MAAM,GAAG,MAAM;IACnBI,OAAO,CAAC,IAAI,CAAC;IACbC,KAAK,CAAC;MACJE,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC;EACD,oBACE,QAAC,WAAW,CAAC,QAAQ;IACnB,KAAK,EAAE;MACLV,IAAI;MACJG,aAAa;MACbF,KAAK;MACLC;IACF,CAAE;IAAA,UAEDG;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE3B,CAAC;AAAC,GArEWD,mBAEX;EAAA,QAEcP,QAAQ;AAAA;AAAA,KAJXO,mBAEX;AAqEF,OAAO,MAAMU,cAAc,GAAG,MAAM;EAAA;EAClC,MAAMC,OAAO,GAAGrB,UAAU,CAACK,WAAW,CAAC;EACvC,IAAIgB,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CACb,0DAA0D,CAC3D;EACH;EACA,OAAOF,OAAO;AAChB,CAAC;AAAC,IARWD,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}